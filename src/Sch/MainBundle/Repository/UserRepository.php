<?php

namespace Sch\MainBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Saswati
 *
 * @category Repository
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{   
    /**
    * 
    * get Users
    * It is used to fetch User data from database on given filters.
    *
    * @param array $data array of coloum name and its values
    * @return array $result containing required data.
    */
    public function getUsers($value = null)
    {
        $query = $this->createQueryBuilder('u')
                    ->select('u.id as userid')
                    ->addSelect('u.name')
                    ->addSelect('u.last')
                    ->addSelect('up.phone')
                    ->addSelect('up.status')
                    ->innerJoin('MainBundle:UserPhone', 'up', 'WITH', 'u.id = up.user');
        if($value['name']){
            $query->Where('u.name = :name')
                ->setParameter('name', $value['name']);
        }
        if($value['phone']){
            $query->andWhere('up.phone = :phone')
                ->setParameter('phone', $value['phone']);
        }
                             
        return $query->getQuery()->getResult();
    }
    
	/**
    * 
    * verifyOtp
    * It is used to fetch data from database on given filters.
    *
    * @param array $data array of coloum name and its values
    * @return array $result containing required data.
    */
	public function verifyOtp($value = null)
	{
		$query = $this->createQueryBuilder('u')
                    ->select('u.id as User')
                    ->innerJoin('MainBundle:UserPhone', 'up', 'WITH', 'u.id = up.user')
                    ->andWhere('u.name = :uname')
						->setParameter('uname', $value['name'])
                    ->andWhere('up.phone = :uphone')
                		->setParameter('uphone', $value['phone'])
                    ->andWhere('u.otp = :uotp')
                		->setParameter('uotp', $value['otp']);
        						
    	return $query->getQuery()->getResult();
	}

}
